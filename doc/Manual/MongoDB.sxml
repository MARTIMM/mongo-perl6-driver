$!d5b.article [
  $|title [ Perl 6 MongoDB driver ]

  $!d5b.info firstname=Marcel surname=Timmerman email=mt1957@gmail.com
             city=Haarlem country=Netherlands
             copy-year='2015, 2016 ... Inf' copy-holder='Marcel Timmerman' [

    $|para [
      MongoDB is a $**glossterm linkend=nosql [Non SQL] database which uses
      $**glossterm linkend=bson [Binary JSON (BSON)] to 
      store and load information in a database. With the mongodb package a
      shell program called mongo is available to give instructions to a
      mongodb server.
    ]

    $|para [ To work with data on the server from within a program a driver is
      needed. There are drivers for many program languages. This document
      describes a driver for the Perl6 language. In the perl6 ecosystem,
      which might grow into a cpan like system later, there are two packages
      needed to work with the driver. These are $**glossterm linkend=mongodb
      [MongoDB] and BSON. BSON is automatically installed with other necessary
      modules.
    ]

    $|para [
      The latest version of this document is generated on date $!SxmlCore.date
    ]
  ]


  $|sect1 [
    $|title [Introduction]
    $|para [
      The purpose of this document is to show how to work with the perl6
      mongodb driver and also to show you the inner workings of this driver in
      the light of the MongoDB developer documents. 
      
      However, this document will not tell you how to design your database among
      other things. There are plenty of good books and documents out there, not
      to mention, the mongodb website.
    ]

    $|para [
      There are quite a few modules written to perform the tasks at hand but not
      all modules will be explained here because many of them are modules
      defining classes to be used in the background and are not used by
      applications directly.
    ]

    $|para [
      Furthermore, this document is not a reference. There are other documents
      for that, written to document the attributes, (sub)methods and subs in a
      class. There will be a list of references at the end of the document.
    ]

    $|para [
      This document assumes that the reader is aware of at least the basics of
      the mongodb database and what one can do with it. Also some perl 6
      knowledge will be necessary.
    ]

    $|para [
      As a last remark, the driver is still in development. Although many parts
      are accomplished, some parts still need to be implemented like
      authentication agains kerberos or LDAP. Furthermore, there are some
      improvements needed to speedup the operations.
    ]

    $|para [
      The following sections will be explained:

      $|itemizedlist spacing=compact [
        $|listitem [
          $|emphasis[Implementation].

          $|itemizedlist spacing=compact [
            $|listitem [
              $|emphasis[BSON::Document]. This is the basic vehicle to insert,
              update retrieve and send commands to the database server. In this
              section there is an explanation of the supported types as well as
              different ways to make requests. Some detailed perl6 is necessary
              to understand mistakes often made when creating the data
              structures.
            ]

            $|listitem [
              $|emphasis[URI]. The URI tells the software how to connect to a server
              and select the proper server.
            ]

            $|listitem [
              $|emphasis[MongoDB::Client]. This module is the starting point of all
              applications which need access to a mongodb database server.


#              cleanup!
            ]

            $|listitem [
              $|emphasis[MongoDB::Database].
            ]

            $|listitem [
              $|emphasis[MongoDB::Collection].
            ]

            $|listitem [
              $|emphasis[MongoDB::Cursor].
            ]

            $|listitem [
              $|emphasis[MongoDB::Server].
            ]

            $|listitem [
              $|emphasis[MongoDB::Server::Control].
            ]
          ]
        ]

        $|listitem [
          $|emphasis[Dependensies]. There are some dependencies which are
          explained a bit here. These are e.g. the server and its version,
          modules like BSON, PKCS5, Auth::SCRAM etcetera.
        ]

        $|listitem [
          $|emphasis[Examples]. Of course, a document whithout examples is a
          bit like an empty box as a present.
        ]
      ]
    ]
  ]

  $|sect1 [
    $|title [Implementation]
    $|para [
    ]

    $|sect2 [
      $|title [BSON::Document]
      $|para [

      ]
    ]

    $|sect2 [
      $|title [URI]
      $|para [

      ]
    ]

    $|sect2 [
      $|title [MongoDB::Client]
      $|para [

      ]

      $|sect3 [
        $|title [Server states and topology]
        $|para [

          $|table rules=all [
            $|title [Server states depending on isMaster outcome]
            $|thead [
              $|tr [
                $|th [Server state]
                $|th [isMaster command result]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-Unknown]
                $|td [
                  Initial, or after a network error or failed ismaster call, or
                  "ok: 1" not in ismaster response.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-Standalone]
                $|td [
                  No "msg: isdbgrid", no setName, and no "isreplicaset: true".
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-Mongos]
                $|td ["msg: isdbgrid"]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-PossiblePrimary]
                $|td [
                  Not yet checked, but another member thinks it is the primary.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-RSPrimary]
                $|td ["ismaster: true", "setName" in response.]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-RSSecondary]
                $|td ["secondary: true", "setName" in response.]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-RSArbiter]
                $|td ["arbiterOnly: true", "setName" in response.]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-RSOther]
                $|td [
                  "setName" in response, "hidden: true" or not primary,
                  secondary, nor arbiter. E.g. starting up or recovering.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [SS-RSGhost]
                $|td [
                  "isreplicaset: true" in response. E.g.  briefly during server
                  startup, in an uninitialized replica set, or when the server
                  is shunned (removed from the replica set config).
                ]
              ]
            ]
          ]

          $|table rules=all [
            $|title [Topology controlled by server states]
            $|thead [
              $|tr [
                $|th [Topology type]
                $|th [Server states]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [TT-Unknown]
                $|td [
                  When a deployment has this topology type, no servers are
                  suitable for read or write operations. These are servers which
                  did not respond on initial connection or threw an exception
                  because of e.g. a DNS lookup failure. All server states of
                  these servers herded by the Client object is SS-Unknown.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [TT-Single]
                $|td [
                  A deployment of topology type TT-Single contains only a single
                  server with a state SS-Standalone. This topology type
                  signifies a direct connection intended to receive all read and
                  write operations. The explanation here differs from that of
                  the mongodb site because of the way it tests for the server
                  states. In the end, when servers are selected and only one
                  suitable server is found, no further selection processing is
                  needed which is intended by the definition of mongodb.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [TT-Sharded]
                $|td [
                  A deployment of topology type TT-Sharded contains one or more
                  servers of type SS-Mongos or SS-Unknown of at least one is
                  SS-Mongos.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [TT-ReplicaSetNoPrimary]
                $|td [
                  A deployment with this topology type can have a mix of server
                  types: SS-RSSecondary, SS-RSArbiter, SS-RSOther, SS-RSGhost,
                  SS-Unknown or SS-PossiblePrimary.
                ]
              ]
            ]

            $|tbody [
              $|tr [
                $|td [TT-ReplicaSetWithPrimary]
                $|td [
                  A deployment with this topology type can have a mix of server
                  types: SS-RSPrimary, SS-RSSecondary, SS-RSArbiter, SS-RSOther,
                  SS-RSGhost, SS-Unknown or SS-PossiblePrimary.
                ]
              ]
            ]
          ]
        ]
      ]

      $|sect3 [
        $|title [Making a connection]
        $|para [
        ]
      ]

      $|sect3 [
        $|title [Server selection]
        $|para [

          $|itemizedlist spacing=compact [
            $|listitem [
              Record the server selection start time
            ]
            $|listitem [
              If the topology wire version is invalid, raise an error
            ]
            $|listitem [
              Find suitable servers by topology type and operation type
            ]
            $|listitem [
              If there are any suitable servers, choose one at random from those
              within the latency window and return it; otherwise, continue to
              step #5
            ]
            $|listitem [
              Request an immediate topology check, then block the server
              selection thread until the topology changes or until the server
              selection timeout has elapsed
            ]
            $|listitem [
              If more than serverSelectionTimeoutMS milliseconds have elapsed
              since the selection start time, raise a server selection error
            ]
            $|listitem [
              Goto Step #2
            ]
          ]

        ]
      ]
    ]

    $|sect2 [
      $|title [MongoDB::Database]
      $|para [

      ]

      $|sect3 [
        $|title [run-command()]
        $|para [

        ]
      ]
    ]

    $|sect2 [
      $|title [MongoDB::Collection]
      $|para [

      ]

      $|sect3 [
        $|title [find()]
        $|para [

        ]
      ]
    ]

    $|sect2 [
      $|title [MongoDB::Cursor]
      $|para [

      ]

      $|sect3 [
        $|title [fetch()]
        $|para [

        ]
      ]

      $|sect3 [
        $|title [iterating over documents]
        $|para [

        ]
      ]
    ]

    $|sect2 [
      $|title [MongoDB::Server]
      $|para [

      ]
    ]

    $|sect2 [
      $|title [MongoDB::Server::Control]
      $|para [

      ]
    ]
  ]

  $|sect1 [
    $|title [Dependencies]
    $|para [

    ]

    $|sect2 [
      $|title [BSON]
      $|para [

      ]
    ]

    $|sect2 [
      $|title [MongoDB server ]
      $|para [

      ]
    ]
  ]

  $|sect1 [
    $|title [Examples]
    $|para [
    ]
    $|sect2 [
      $|title [Starting and stopping a server using the configuration]
      $|para [
        This method, using a configuration file, is also used to test
        the modules to help starting and stopping a locally installed server.
        There are several steps in order to configure it properly.

        $|itemizedlist spacing=compact [
          $|listitem [
            $|emphasis[Configuration file].
          ]

          $|listitem [
            $|emphasis[Server selection].
          ]

          $|listitem [
            $|emphasis[Starting and stopping].
          ]
        ]
      ]

      $|sect3 [
        $|title [Configuration file]
        $|para [

        ]
      ]

      $|sect3 [
        $|title [Server selection]
        $|para [

        ]
      ]

      $|sect3 [
        $|title [Starting and stopping]
        $|para [

        ]
      ]
    ]

    $|sect2 [
      $|title [Making a replica server]
      $|para [
      ]

      $|sect3 [
        $|title [Preparing]
        $|para [

        ]
      ]

      $|sect3 [
        $|title [Initializing]
        $|para [

        ]
      ]
    ]
  ]

  #-----------------------------------------------------------------------------
  # References to books, websites
  $|sect1 [
    $|title [References to books, websites, articles and pod-documents]

    $|sect2 [
      $|title [Web Pages]

      $|sect3 [
        $|para [
          MongoDB Manual covering all aspects of what is possible.
          Source is from MongoDB, Inc.
          $|link xlink:href=http://docs.mongodb.com/master/MongoDB-manual.epub [
            EPub edition
          ]
        ]
      ]
    ]
  ]

  #-----------------------------------------------------------------------------
  # Glossary of things
  $|glossary [
    $|title [MongoDB Driver Glossary and References]

    $|glossdiv [
      $|title [B]

      $|glossentry xml:id=bson [
        $|glossterm [Binary JSON]
        $|acronim [JSON]
        $|glossdef [
          $|para [
            BSON is a computer data interchange format used mainly as a data
            storage and network transfer format in the MongoDB database.
            See also on
            $*|link xlink:href=https://nl.wikipedia.org/wiki/BSON [
              WikipediA
            ].
          ]
        ]
      ]
    ]


    $|glossdiv [
      $|title [J]

      $|glossentry xml:id=json [
        $|glossterm [JavaScript Object Notation]
        $|acronim [JSON]
        $|glossdef [
          $|para [
            JavaScript Object Notation) is an open-standard format that uses
            human-readable text to transmit data objects consisting of
            attribute-value pairs.
            See also on
            $*|link xlink:href=https://nl.wikipedia.org/wiki/JSON [
              WikipediA
            ].
          ]
        ]
      ]
    ]


    $|glossdiv [
      $|title [M]

      $|glossentry xml:id=mongodb [
        $|glossterm [MongoDB]
        $|acronim [MongoDB]
        $|glossdef [
          $|para [
            MongoDB (from humongous) is a free and open-source cross-platform
            document-oriented database program.
          ]
        ]
      ]
    ]


    $|glossdiv [
      $|title [N]

      $|glossentry xml:id=nosql [
        $|glossterm [Non SQL]
        $|acronim [NoSql]
        $|glossdef [
          $|para [
            A NoSQL (originally referring to "non $**glossterm linkend=sql
            [Structured Query Language]", "non relational" or "not only SQL"
            database provides a mechanism for storage and retrieval of data
            which is modeled in means other than the tabular relations used in
            relational databases. 
          ]
        ]
      ]
    ]


    $|glossdiv [
      $|title [S]

      $|glossentry xml:id=sql [
        $|glossterm [Structured Query Language]
        $|acronim [Sql]
        $|glossdef [
          $|para [
            SQL or Structured Query Language is a special-purpose
            domain-specific language used in programming and designed for
            managing data held in a relational database management system
            (RDBMS)
          ]
        ]
      ]
    ]
  ]

  $|index
]
