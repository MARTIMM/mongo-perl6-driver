#!/usr/bin/env perl6
#
use v6;

# Running the pod file will create a pdf using wkhtmltopdf
#
my Str $pod = "$*PROGRAM";
my Str $pdf = $pod;
$pdf ~~ s/\. <-[.]>+ $/.pdf/;
shell( "perl6 --doc=HTML '$pod' | wkhtmltopdf - '$pdf'");

#-------------------------------------------------------------------------------
#
=begin pod

=TITLE MongoDB Package

=SUBTITLE Package using mongod server for storage and retrieval of data


=head1 DESCRIPTION

This package holds a set of modules which will help you accessing a MongoDB
server. All primitive functions are installed to insert, update, find and remove
documents.


=head1 MODULES

=head2 MongoDB::Connection

Module to connect to server and to get basic information. See
L<pod file|MongoDB/Connection.pod>.

=head2 MongoDB::DataBase

Module to handle specific database tasks.

=head2 MongoDB::DataBase::Authenticate

Module to authenticate users.

=head2 MongoDB::DataBase::Users

Module to administer user accounts.

=head2 MongoDB::Collection

Module to perfoem the standard CRUD operations. See
L<pod file|MongoDB/Collection.pod>.

=head2 MongoDB::Cursor

Module to iterate through found data search for by methods from the
C<MongoDB::Collection> module.

=head2 MongoDB::DBRef

Module to handle references between documents.

=head2 MongoDB::Protocol

Module to define a role used by classes C<MongoDB::Collection> and C<MongoDB::Cursor>
to have access to an instantiated wire class.

=head2 MongoDB::Wire

Module for which its methods access the C<BSON> encoding methods are used
before sending and decoding tools after receiving data from the server.

=head2 MongoDB

Module to hold basic information reachable from other modules.


=head1 DEPENDENCIES

Module MongoDB depends on Module C<BSON> and C<Digest::MD5>.


=head1 SEE ALSO

The MongoDB site at L<http://www.mongodb.org/>


=head1 BUGS and TODO

There is a lot still to be implemented. A non exhaustive list of todo's:

=for item1
Mongo priority recomendations. Following L<priority
recomendations|http://docs.mongodb.org/meta-driver/latest/legacy/mongodb-driver-requirements/>
from the mongodb site about writing drivers.

=for item1
Speed, protocol correctness and clear code are priorities for now.

=for item2
Speed can be influenced by specifying types on all variables. Also setting
constraints like (un)definedness etc on parameters. Most of it is already done.

=for item2
Furthermore the speedup of the language perl6 itself would have more impact than
the programming of a several month student(me) can accomplish ;-). As of
september 2015 a great improvement is made.

=for item1
Keys must be checked for illegal characters when inserting documents.

=for item1
Test to compare documents

=for item1
Test group aggregation keyf field and finalize

=for item1
Test map reduce aggregation more thoroughly.

=for item1
In method map_reduce the parameter scope is not used.

=for item1
Explain changed after mongodb 3.0

=for item1
Testing $mod in queries seems to have problems in version 3.0.5

=for item1
Get info about multiple accounts instead of one at the time

=for item1
Need a change in throwing exceptions. Not all errors are unrecoverable. Return
e.g. a failure instead of throwing an exception. C<MongoDB::Connect.new()> is
the first method who saves an exception in its c<$.status> attribute.

=for item1
Modify Mongo.pm. Remove use statements and add variables for use by modules.
This is done now.

=for item1
While we can add users to the database we cannot authenticate due to the lack
of supported modules in perl 6. E.g. I'd like to have SCRAM-SHA1 to
authenticate with. 

=for item1
Change method names with an underscore into names with a dash. E.g. map_reduce
will become then map-reduce. When it will be defined, the old names with an
underscore will show deprecation warnings.

=for item1
At the moment the packages is written to use the latest mongo version 3.* only.
Perhaps also the latest 2.* version should be supported too.


=head1 RELEASE NOTES

This section is partly taken over from the README.md document which is included
in this package.

=for item1
Version 0.25

=for item2
Addition of methods to administer user accounts

=begin nested

  Create user
  Drop user
  Drop all users
  Users info
  Grant roles
  Revoke roles
  Update users

=end nested

=for item2
Added document checks to inserts. No dollars on first char of keys and no
dots in keys. This is checked on all levels. On top level the key C<_id>
is checked if the value is unique in te collection.

=for item2
Changes in code caused by upgrading from MongoDB 2.4 to 3.0.5. Many of the
servers return messages were changed.


=for item1
Version 0.24

=for item2
Added C<version> and C<build_info> to MongoDB::Connection.

=for item2
Added error processing in method C<count> in module C<MongoDB::Cursor>. Throws
C<X::MongoDB::Cursor> exception.

=for item2
Changes caused by rakudo update in June 2015. BIG PROBLEM!!!!!!!!! Should have
seen this coming! Its about C<run_command>. A hash needs to be setup with
therein a command to be processed. With the new rakudo the hash get hashed
properly and the keys are now in some unpredictable order. One of the
necessities of run_command is that the command is found at the first key value
pair. During encoding into a BSON byte array the command can be placed anywhere
in the string and some other option coming at the first location will be seen
as the command. SOLVED; mongodb run_command needs command on first key value
pair. Because of this a few multi methods in several modules are added to
process Pair arrays instead of hashes.

=for item2
Added C<find_and_modify>, C<stats>, C<data_size> methods in module
C<MongoDB::Collection>.


=head1 AUTHORS

  Pawe≈Ç Pabian - Creator of the modules until january 2015
  Marcel Timmerman - Maintainer since january 2015 (MARTIMM on github)

=head1 LICENSE AND COPYRIGHT

Released under L<Artistic License 2.0|http://www.perlfoundation.org/artistic_license_2_0>.

=end pod

#http://unicode-table.com/en/026B/
#E<51627>
#E<0xC9AB>

#-------------------------------------------------------------------------------
